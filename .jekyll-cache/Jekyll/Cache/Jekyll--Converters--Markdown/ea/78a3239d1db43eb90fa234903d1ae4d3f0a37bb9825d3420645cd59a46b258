I"À <p><a class="quicklink" href="https://github.com/alphonse/alphonse.github.io/raw/master/archive/chem191-f2019/pdf/tinkercad-blink.pdf" target="_blank"> Download Assignment as PDF </a></p>

<hr />

<p><strong>Objective:</strong> Program an Arduino on Tinkercad using the language Scratch.<br />
<strong>To turn in:</strong> I will view your Arduino/Scratch code through the Tinkercad website.<br />
<strong>Grading:</strong> This assignments counts for 10 points of extra credit toward your homework grade.<br />
<strong>Filename Example:</strong> <code class="language-plaintext highlighter-rouge">fischerAl_tinkercadBlink.png</code></p>

<h2 id="introduction">Introduction</h2>

<p>The user of an Arduino must program it to tell it what to do.  Arduino programs are called <em>sketches</em> and are written in <strong>C</strong>, likely the most common computer language in the world.  These sketches are usually composed in a software package called an <em>integrated development environment</em> (IDE).</p>

<p>You‚Äôll gain experience using the Arduino IDE in class.   This first exercise will introduce you to programming through an online development environment called Tinkercad.  This environment lets you build circuits and program Arduinos virtually through an online interface.  Tinkercad incorporates the programming language <strong>Scratch</strong>, which is a graphical programming language that allows the user to build a computer program using a drag and drop utility rather than a computer command line interface.  This is often more approachable for many first-time programmers than the text-based C language.</p>

<p>In Scratch, code is composed of nesting blocks and ovals, where each block represents a <em>function</em> that the Arduino can perform and each oval represents a <em>variable</em> to which the Arduino can save values.  The functions are labeled as to what they do in Scratch, while the variables are named by the user.</p>

<p>In this exercise, you‚Äôll build a virtual Arduino with an LED attached.  When you‚Äôre done with this exercise, you‚Äôll can transfer your code to a real Arduino (Teensy) board in lab.</p>

<h2 id="getting-started-on-tinkercad">Getting Started on Tinkercad</h2>

<ol>
  <li>Go to <a href="https://www.tinkercad.com/">tinkercad.com</a> and click the green <strong>Join your class</strong> button.</li>
  <li>Enter the class code (KNRMQXCFCCSU) when prompted.</li>
  <li>Enter your first name in the Nickname field.  Once you log in, anything you create will be visible to your instructor for grading purposes.</li>
</ol>

<h2 id="copy-a-default-circuit">Copy a Default Circuit</h2>

<ol>
  <li>
    <p>After logging into the class, go to <a href="https://www.tinkercad.com/things/fLDK0dntile-chem-191-exercise-1">https://www.tinkercad.com/things/fLDK0dntile-chem-191-exercise-1</a> and click the <strong>Copy and Tinker</strong> button.  The circuit used for this assignment will automatically be copied to your personal dashboard and your code will be visible to your instructor.</p>

    <blockquote>
      <p><em>The notes on the circuit can be expanded and will explain what each part is.</em></p>
    </blockquote>
  </li>
</ol>

<h2 id="program-the-arduino">Program the Arduino</h2>

<ol>
  <li>
    <p>Click the <strong>Code</strong> button at the top right of the Tinkercad window.  The code pane will slide out. (See Figure 1, below.)</p>

    <p><img src="img/tinkercad_default.png" alt="&lt;small&gt;*The default Tinkercad view. The code pane can be accessed by clicking the Code button in the red box; the Start Simulation button runs the code.*&lt;/small&gt;" /></p>
  </li>
  <li>
    <p>In the pane that slides out, click the <strong>Blocks</strong> dropdown and select <strong>Blocks + Text</strong>.  This will allow you to see both the Scratch code and the Arduino code (which is generated by the Scratch code automatically).  See Figure 2 for more clarification.</p>

    <p><img src="img/tinkercad_codeView.png" alt="&lt;small&gt;*The coding pane of Tinkercad. Code is modified by dragging blocks from &quot;Scratch Functions&quot; to &quot;Scratch Code&quot;; the Arduino Code is generated automatically. *&lt;/small&gt;" /></p>
  </li>
  <li>
    <p>Click on the blue <strong>Output</strong> circle at the top left of the <em>Scratch Functions</em> area and find the module that says <code class="language-plaintext highlighter-rouge">set pin __ to __</code>.  Drag that block into the <em>Scratch Code</em> area.</p>
  </li>
  <li>
    <p>In the new code module, set the pin to <code class="language-plaintext highlighter-rouge">13</code> (pin 13 is one of the pins the LED is attached to) and have the code set the pin to <code class="language-plaintext highlighter-rouge">HIGH</code>.</p>

    <blockquote>
      <p><em><code class="language-plaintext highlighter-rouge">HIGH</code> means ‚Äúon‚Äù and <code class="language-plaintext highlighter-rouge">LOW</code> means ‚Äúoff‚Äù in Arduino speak.</em></p>
    </blockquote>
  </li>
  <li>
    <p>Click on the yellow <strong>Control</strong> circle at the top of the <em>Scratch Functions</em> area and find the module that says <code class="language-plaintext highlighter-rouge">wait 1 secs</code>. Drag that block into the <em>Scratch Code</em> area.</p>
  </li>
  <li>
    <p>Put in <code class="language-plaintext highlighter-rouge">1</code> and select <code class="language-plaintext highlighter-rouge">secs</code>.  This will make the code pause for 1 second after the light turns on.</p>
  </li>
  <li>
    <p>Turn the light off by clicking on <strong>Output</strong> at the top of the <em>Scratch Functions</em> area, finding the module that says <code class="language-plaintext highlighter-rouge">set pin __ to __</code>, dragging it block into the <em>Scratch Code</em> area, and selecting <code class="language-plaintext highlighter-rouge">13</code> and <code class="language-plaintext highlighter-rouge">LOW</code>.</p>

    <blockquote>
      <p><em>Notice how the Arduino code changes as you change the Scratch code!</em></p>
    </blockquote>
  </li>
</ol>

<h2 id="run-the-program">Run the Program</h2>

<ol>
  <li>Press <strong>Start Simulation</strong>.  You should see the LED blink on and off. (Once the code ends, the Arduino loops back to the beginning and repeats it indefinitely!)</li>
</ol>

<!-- ## Change the Program

The LED has 3 colors total.  The blue and green colors are controlled by pins 11 and 12 on the Arduino.

1. Add more blocks to the bottom of your Scratch code to turn one of the other colors on and off.  Your final program should turn the red LED on, wait one second, turn it off, wait one second, turn another color on, wait one second, turn it off, wait one second, and repeat indefinitely. -->

<h2 id="to-turn-in">To Turn In:</h2>

<p>I will consider two items when grading this: (1) a screenshot of your code submitted to Dropbox (should look like Figure 2, above but with different code) and (2) your circuit on Tinkercad.</p>

<ul>
  <li><strong>To turn in your screenshot:</strong>
    <ol>
      <li>Use your computer‚Äôs screenshot utility to take a screenshot.  On Windows you can go to the start menu and search for screenshot.  On Mac you can press <strong>command + shift + 4</strong> all at once; the screenshot will be automatically saved to your Desktop.</li>
      <li>Right click on your screenshot file, click <strong>Rename</strong>, and name your file according to: <strong><em>firstnameLastname_tinkercadBlink.png</em></strong>.</li>
      <li>Go to <strong><a href="https://alphonse.github.io/archive/chem191-f2019/">alphonse.github.io/archive/chem191-f2019</a></strong> and click on <strong>Assignment Submission Links</strong>.</li>
      <li>Find the URL for the ‚ÄòHomework - Tinkercad Blink‚Äô assignment and copy/paste it into your browser.</li>
      <li>Click <strong>Choose Files</strong> and select the screenshot you wish to upload.</li>
      <li>Enter your first (preferred) and last names and your email address, and then press <strong>Upload</strong>.</li>
      <li>That‚Äôs it!  You should receive a confirmation email that your assignment was submitted.</li>
    </ol>
  </li>
</ul>

<p>There is nothing else you need to do to turn in your circuit.  As long as you submitted your completed your circuit within the class area on Tinkercad I will be able to view it.</p>
:ET